name: Archive

on:
  repository_dispatch:
    types: [archive]

jobs:
  archive:
    runs-on: ubuntu-latest

    steps:
      - name: Archive ${{ github.event.client_payload.url }}
        run: echo "Archiving ${{ github.event.client_payload.url }}"

      - name: Checkout
        uses: actions/checkout@main

      - name: Get Latest Node.js Release URL
        id: get_latest_node
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/nodejs/node/releases/latest | jq -r '.tag_name')
          LATEST_URL=$(curl -s https://api.github.com/repos/nodejs/node/releases/latest | jq -r '.tarball_url')
          echo "Latest Node.js version: $LATEST_TAG"
          echo "LATEST_URL=$LATEST_URL" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Cache Node.js Binary
        uses: actions/cache@main
        with:
          path: ~/node
          key: node-${{ env.LATEST_TAG }}

      - name: Download and Extract Node.js (if not cached)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -L ${{ env.LATEST_URL }} -o node-latest.tar.gz
          mkdir -p ~/node
          tar -xzf node-latest.tar.gz -C ~/node --strip-components=1

      - name: Add Node.js to PATH
        run: echo "${{ runner.os == 'Windows' && 'set PATH=%PATH%;' || 'export PATH=$PATH:' }}$HOME/node/bin" >> $GITHUB_ENV

      - name: Verify Node.js version
        run: |
          node -v
          npm -v

      - uses: oven-sh/setup-bun@main
        with:
          bun-version: latest
          bun-download-url: "https://github.com/oven-sh/bun/releases/latest/download/bun-linux-x64.zip"

      - name: Install CJK fonts
        run: sudo apt-get install fonts-noto-cjk

      - uses: actions-rust-lang/setup-rust-toolchain@main
      - run: bun i -f
      - run: cargo install monolith

      - name: Get Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(jq '.dependencies["playwright"]' package.json -r)" >> $GITHUB_ENV

      - name: Cache Playwright Browsers
        id: cache-playwright-browsers
        uses: actions/cache@main
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright with dependencies
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: bun playwright install chromium

      # - name: Install Playwright dependencies
      #   if: steps.cache-playwright-browsers.outputs.cache-hit == 'true'
      #   run: bun playwright install-deps

      - run: echo "CLIENT_IDS=${{ secrets.CLIENT_IDS }}" >> .env

      - run: bun archive.ts --url ${{ github.event.client_payload.url }}
      - run: bun run tsx run.ts

      - name: Commit
        uses: nick-fields/retry@master
        with:
          timeout_minutes: 120
          max_attempts: 10000
          command: |
            git config user.email "actions@github.com"
            git config user.name "Actions"
            git pull --rebase --autostash
            git add .
            git commit -m "Archive"
            git push
